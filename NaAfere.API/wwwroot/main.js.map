{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/crew/crew.component.css","webpack:///./src/app/crew/crew.component.html","webpack:///./src/app/crew/crew.component.ts","webpack:///./src/app/games/games.component.css","webpack:///./src/app/games/games.component.html","webpack:///./src/app/games/games.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/regist/regist.component.css","webpack:///./src/app/regist/regist.component.html","webpack:///./src/app/regist/regist.component.ts","webpack:///./src/app/talk/talk.component.css","webpack:///./src/app/talk/talk.component.html","webpack:///./src/app/talk/talk.component.ts","webpack:///./src/app/teams/teams.component.css","webpack:///./src/app/teams/teams.component.html","webpack:///./src/app/teams/teams.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService) {}\n\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.alertify.error('You shall not pass!!');\n    this.router.navigate(['']);\n  }\n}\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n  constructor() {}\n\n  confirm(message: string, okCallback: () => any) {\n    // tslint:disable-next-line:only-arrow-functions\n    alertify.confirm(message, function(e) {\n      if (e) {\n        okCallback();\n      } else {\n      }\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = 'http://localhost:5000/api/auth/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n\nconstructor(private http: HttpClient) { }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token.result);\n          this.decodedToken = this.jwtHelper.decodeToken(user.token.result);\n          console.log(this.decodedToken);\n        }\n      })\n    );\n  }\n\n  register(user: User) {\n    return this.http.post(this.baseUrl + 'register', user);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n                if (error instanceof HttpErrorResponse) {\r\n                    if (error.status === 401) {\r\n                        return throwError(error.statusText);\r\n                    }\r\n                    const applicationError = error.headers.get('Application-Error');\r\n                    if (applicationError) {\r\n                        console.error(applicationError);\r\n                        return throwError(applicationError);\r\n                    }\r\n\r\n                    const serverError = error.error;\r\n                    let modalStateErrors = '';\r\n                    if (serverError && typeof serverError === 'object') {\r\n                        for (const key in serverError) {\r\n                            if (serverError[key]) {\r\n                                modalStateErrors += serverError[key] + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                    return throwError(modalStateErrors || serverError || 'Server Error');\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n};\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { TeamsComponent } from './teams/teams.component';\nimport { TalkComponent } from './talk/talk.component';\nimport { CrewComponent } from './crew/crew.component';\nimport { GamesComponent } from './games/games.component';\nimport { RegistComponent } from './regist/regist.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './_guards/auth.guard';\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent},\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      {path: 'home', component: HomeComponent},\n      {path: 'games', component: GamesComponent},\n      {path: 'crew', component: CrewComponent},\n      {path: 'talk', component: TalkComponent},\n      {path: 'teams', component: TeamsComponent}\n    ]\n  },\n  // {path: 'home', component: HomeComponent, canActivate: [AuthGuard]},\n  // {path: 'games', component: GamesComponent, canActivate: [AuthGuard]},\n  // {path: 'crew', component: CrewComponent, canActivate: [AuthGuard]},\n  // {path: 'talk', component: TalkComponent, canActivate: [AuthGuard]},\n  // {path: 'teams', component: TeamsComponent, canActivate: [AuthGuard]},\n  {path: 'register', component: RegistComponent},\n  {path: '**', redirectTo: 'home', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-home></app-home>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\n@Component({   // component decorator\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  jwtHelper = new JwtHelperService();\n\n  constructor(private authService: AuthService) {}\n\n    ngOnInit() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n      }\n    }\n}\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { BsDropdownModule, BsDatepickerModule } from 'ngx-bootstrap';\nimport { ShowHidePasswordModule } from 'ngx-show-hide-password';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegistComponent } from './regist/regist.component';\nimport { AuthService } from './_services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { GamesComponent } from './games/games.component';\nimport { CrewComponent } from './crew/crew.component';\nimport { TalkComponent } from './talk/talk.component';\nimport { TeamsComponent } from './teams/teams.component';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { AlertifyService } from './_services/alertify.service';\nimport { AuthGuard } from './_guards/auth.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegistComponent,\n    HomeComponent,\n    GamesComponent,\n    CrewComponent,\n    TalkComponent,\n    TeamsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDropdownModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ShowHidePasswordModule\n  ],\n  providers: [\n    AuthService,\n    ErrorInterceptorProvider,\n    AlertifyService,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZXcvY3Jldy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  crew works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-crew',\n  templateUrl: './crew.component.html',\n  styleUrls: ['./crew.component.css']\n})\nexport class CrewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhbWVzL2dhbWVzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  games works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-games',\n  templateUrl: './games.component.html',\n  styleUrls: ['./games.component.css']\n})\nexport class GamesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".dropdown-toggle, .dropdown-item {\\r\\n    cursor: pointer;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZHJvcGRvd24tdG9nZ2xlLCAuZHJvcGRvd24taXRlbSB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn0iXX0= */\"","module.exports = \"<nav *ngIf=\\\"checkToken()\\\" class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <!-- <div class=\\\"container\\\"> -->\\n    <a class=\\\"navbar-brand\\\">NaAFERE</a>\\n\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/games\\\">Games</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/talk\\\">Talk</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/crew\\\">Crew</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/teams\\\">Teams</a>\\n      </li>\\n    </ul>\\n\\n    <div class=\\\"dropdown\\\" dropdown>\\n      <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\n        {{authService.decodedToken?.unique_name | titlecase}}\\n      </a>\\n      <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-user\\\"></i>Edit Profile</a>\\n        <div class=\\\"dropdown-divider\\\"></div>\\n        <a class=\\\"dropdown-item\\\" routerLink=\\\"\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-sign-out\\\"></i>Logout</a>\\n      </div>\\n    </div>\\n  <!-- </div> -->\\n</nav>\\n\\n\\n \\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(public authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.alertify.message('loged out');\n  }\n\n  checkToken() {\n    const token = localStorage.getItem('token');\n    return !!token;  // if token is not empty because of !! it will return true, otherwise it will return false\n  }\n\n}\n","module.exports = \"\\r\\n.form-signin {\\r\\n  align-items: center;\\r\\n  width: 50%;\\r\\n  max-width: 330px;\\r\\n  padding: 15px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.form-signin .center {\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\\r\\n\\r\\n.form-signin .checkbox {\\r\\n  font-weight: 400;\\r\\n}\\r\\n\\r\\n.form-signin .form-control {\\r\\n  position: relative;\\r\\n  box-sizing: border-box;\\r\\n  height: auto;\\r\\n  padding: 10px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n.form-signin .form-control:focus {\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n.form-signin input[type=\\\"email\\\"] {\\r\\n  margin-bottom: -1px;\\r\\n  border-bottom-right-radius: 0;\\r\\n  border-bottom-left-radius: 0;\\r\\n}\\r\\n\\r\\n.form-signin input[type=\\\"password\\\"] {\\r\\n  margin-bottom: 10px;\\r\\n  border-top-left-radius: 0;\\r\\n  border-top-right-radius: 0;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxtQkFBbUI7RUFDbkIsVUFBVTtFQUNWLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2IsWUFBWTtBQUNkOztBQUVBO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixhQUFhO0VBQ2IsZUFBZTtBQUNqQjs7QUFDQTtFQUNFLFVBQVU7QUFDWjs7QUFDQTtFQUNFLG1CQUFtQjtFQUNuQiw2QkFBNkI7RUFDN0IsNEJBQTRCO0FBQzlCOztBQUNBO0VBQ0UsbUJBQW1CO0VBQ25CLHlCQUF5QjtFQUN6QiwwQkFBMEI7QUFDNUIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5mb3JtLXNpZ25pbiB7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB3aWR0aDogNTAlO1xyXG4gIG1heC13aWR0aDogMzMwcHg7XHJcbiAgcGFkZGluZzogMTVweDtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbi5mb3JtLXNpZ25pbiAuY2VudGVyIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tbGVmdDogYXV0bztcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi5mb3JtLXNpZ25pbiAuY2hlY2tib3gge1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbn1cclxuLmZvcm0tc2lnbmluIC5mb3JtLWNvbnRyb2wge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIGhlaWdodDogYXV0bztcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG4uZm9ybS1zaWduaW4gLmZvcm0tY29udHJvbDpmb2N1cyB7XHJcbiAgei1pbmRleDogMjtcclxufVxyXG4uZm9ybS1zaWduaW4gaW5wdXRbdHlwZT1cImVtYWlsXCJdIHtcclxuICBtYXJnaW4tYm90dG9tOiAtMXB4O1xyXG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xyXG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XHJcbn1cclxuLmZvcm0tc2lnbmluIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xyXG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xyXG59XHJcblxyXG4iXX0= */\"","module.exports = \"<form *ngIf=\\\"!checkToken()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-signin\\\" (ngSubmit)=\\\"login()\\\" autocomplete=\\\"on\\\">\\n<!-- <form *ngIf=\\\"!registerMode && !checkToken()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-signin\\\"> -->\\n  <img class=\\\"center mb-3 mt-2\\\" src=\\\"../assets/logoForNow.PNG\\\" alt=\\\"\\\" width=\\\"72\\\" height=\\\"72\\\">\\n  <h1 class=\\\"h3 mb-3 font-weight-normal text-center\\\">Please sign in</h1>\\n\\n  <!-- <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label> -->\\n  <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control mb-2\\\" placeholder=\\\"Email address\\\" required=\\\"\\\" \\n      autofocus=\\\"\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\">\\n\\n  <!-- <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label> -->\\n  <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required=\\\"\\\" \\n      [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\">\\n\\n  <div class=\\\"checkbox mb-1\\\">\\n    <label>\\n      <input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\n    </label>\\n  </div>\\n  \\n  <div class=\\\"text-center\\\">\\n      <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success mr-1\\\" type=\\\"submit\\\">Sign in</button>\\n      <button class=\\\"btn btn-secondary\\\" routerLink=\\\"/register\\\" type=\\\"button\\\">Register</button>\\n  </div> \\n</form>\\n\\n<!-- <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n  <app-regist></app-regist>\\n</div> -->\\n<!-- class=\\\"nav-item nav-link-edit\\\" -->\"","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  model: any = {};\n\n  constructor(private authService: AuthService, private alertify: AlertifyService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(next => {\n      this.alertify.success('login success!');\n    },\n      error => {\n        this.alertify.error(error);\n    }, () => {this.router.navigate(['/games']);\n  });\n  }\n\n  checkToken() {\n    return this.authService.loggedIn();\n    // return !!token;  // if token is not empty because of !! it will return true, otherwise it will return false\n  }\n\n}\n","module.exports = \"\\r\\n  .form-signin {\\r\\n    align-items: center;\\r\\n    width: 50%;\\r\\n    max-width: 330px;\\r\\n    padding: 15px;\\r\\n    margin: auto;\\r\\n  }\\r\\n\\r\\n  .form-signin .center {\\r\\n    display: block;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n  }\\r\\n\\r\\n  .form-signin .checkbox {\\r\\n    font-weight: 400;\\r\\n  }\\r\\n\\r\\n  .form-signin .form-control {\\r\\n    position: relative;\\r\\n    box-sizing: border-box;\\r\\n    height: auto;\\r\\n    padding: 10px;\\r\\n    font-size: 16px;\\r\\n  }\\r\\n\\r\\n  .form-signin .form-control:focus {\\r\\n    z-index: 2;\\r\\n  }\\r\\n\\r\\n  .form-signin input[type=\\\"email\\\"] {\\r\\n    margin-bottom: -1px;\\r\\n    border-bottom-right-radius: 0;\\r\\n    border-bottom-left-radius: 0;\\r\\n  }\\r\\n\\r\\n  /* .form-signin input[type=\\\"password\\\"] {\\r\\n    margin-bottom: 10px;\\r\\n    border-top-left-radius: 0;\\r\\n    border-top-right-radius: 0;\\r\\n  } */\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0L3JlZ2lzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7RUFDRTtJQUNFLG1CQUFtQjtJQUNuQixVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGFBQWE7SUFDYixlQUFlO0VBQ2pCOztFQUNBO0lBQ0UsVUFBVTtFQUNaOztFQUNBO0lBQ0UsbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3Qiw0QkFBNEI7RUFDOUI7O0VBQ0E7Ozs7S0FJRyIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdC9yZWdpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4gIC5mb3JtLXNpZ25pbiB7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIG1heC13aWR0aDogMzMwcHg7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gIH1cclxuXHJcbiAgLmZvcm0tc2lnbmluIC5jZW50ZXIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICB9XHJcblxyXG4gIC5mb3JtLXNpZ25pbiAuY2hlY2tib3gge1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICB9XHJcbiAgLmZvcm0tc2lnbmluIC5mb3JtLWNvbnRyb2wge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgfVxyXG4gIC5mb3JtLXNpZ25pbiAuZm9ybS1jb250cm9sOmZvY3VzIHtcclxuICAgIHotaW5kZXg6IDI7XHJcbiAgfVxyXG4gIC5mb3JtLXNpZ25pbiBpbnB1dFt0eXBlPVwiZW1haWxcIl0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLTFweDtcclxuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xyXG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcclxuICB9XHJcbiAgLyogLmZvcm0tc2lnbmluIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcclxuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xyXG4gIH0gKi8iXX0= */\"","module.exports = \"<form *ngIf=\\\"!checkToken()\\\" [formGroup]=\\\"registerForm\\\" class=\\\"form-signin\\\" (ngSubmit)=\\\"register()\\\">\\n  <img class=\\\"center mb-3 mt-2\\\" src=\\\"../assets/logoForNow.PNG\\\" alt=\\\"\\\" width=\\\"72\\\" height=\\\"72\\\">\\n  <h1 class=\\\"h3 mb-3 font-weight-normal text-center\\\">Sing up!</h1>\\n\\n  <div class=\\\"mb-2\\\">\\n    <input type=\\\"email\\\" id=\\\"inputEmail\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('email').errors && registerForm.get('email').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Email address\\\" formControlName=\\\"email\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('email').hasError('required') \\n            && registerForm.get('email').touched\\\">Please choose an email</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('email').hasError('email') \\n            && registerForm.get('email').touched\\\">It is not an email</div>\\n  </div>\\n\\n  <div class=\\\"mb-2\\\">\\n    <!-- <show-hide-password size=\\\"sm\\\" btnStyle=\\\"secondary\\\" [btnOutline]=\\\"true\\\"> -->\\n    <input type=\\\"password\\\" id=\\\"inputPassword\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n    <!-- </show-hide-password> -->\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('required') \\n            && registerForm.get('password').touched\\\">Password is required</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('minlength') \\n            && registerForm.get('password').touched\\\">Password has to have at least 7 characters</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('pattern') \\n                  && registerForm.get('password').touched\\\">Password requires at least one: number, uppercase and\\n      lowercase character</div>\\n\\n  </div>\\n\\n  <div class=\\\"mb-2\\\">\\n    <!-- <label for=\\\"inputConfirmPassword\\\" class=\\\"sr-only\\\">Confirm Password</label> -->\\n    <input type=\\\"password\\\" id=\\\"inputConfirmPassword\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched\\n                || registerForm.get('confirmPassword').touched && registerForm.hasError('mismatch')}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') \\n          && registerForm.get('confirmPassword').touched\\\">This field is required</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.hasError('mismatch') \\n          && registerForm.get('confirmPassword').touched\\\">The confirmation don't match to Password</div>\\n  </div>\\n\\n  <div class=\\\"mb-2\\\">\\n    <input type=\\\"text\\\" id=\\\"inputFirstName\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('firstName').errors && registerForm.get('firstName').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('firstName').hasError('required') \\n              && registerForm.get('firstName').touched\\\">Please enter your first name</div>\\n  </div>\\n\\n  <div class=\\\"mb-2\\\">\\n    <input type=\\\"text\\\" id=\\\"inputLastName\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('lastName').errors && registerForm.get('lastName').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('lastName').hasError('required') \\n              && registerForm.get('lastName').touched\\\">Please enter your last name</div>\\n  </div>\\n\\n  <div class=\\\"mb-2\\\">\\n    <input type=\\\"text\\\" id=\\\"inputCity\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('city').hasError('required') \\n              && registerForm.get('city').touched\\\">Please enter your city where you live</div>\\n  </div>\\n\\n  <div class=\\\"mb-2\\\">\\n    <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a:</label>\\n    <label class=\\\"radio-inline\\\">\\n      <input type=\\\"radio\\\" class=\\\"form-control mr-3\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\n    </label>\\n    <label class=\\\"radio-inline ml-3\\\">\\n      <input type=\\\"radio\\\" class=\\\"form-control mr-3\\\" value=\\\"female\\\" formControlName=\\\"gender\\\">Female\\n    </label>\\n  </div>\\n\\n  <div class=\\\"mb-2\\\">\\n    <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" id=\\\"inputDateOfBirth\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Date Of Birth\\\" formControlName=\\\"dateOfBirth\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('dateOfBirth').hasError('required') \\n              && registerForm.get('dateOfBirth').touched\\\">Please choose your nationality</div>\\n  </div>\\n\\n  <div class=\\\"mb-2\\\">\\n    <label>Nationality: </label>\\n    <select [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\"\\n      class=\\\"form-control\\\" formControlName=\\\"country\\\">\\n      <option value=\\\"\\\" selected disabled hidden>-select one-</option>\\n      <option value=\\\"afghan\\\">Afghan</option>\\n      <option value=\\\"albanian\\\">Albanian</option>\\n      <option value=\\\"algerian\\\">Algerian</option>\\n      <option value=\\\"american\\\">American</option>\\n      <option value=\\\"andorran\\\">Andorran</option>\\n      <option value=\\\"angolan\\\">Angolan</option>\\n      <option value=\\\"antiguans\\\">Antiguans</option>\\n      <option value=\\\"argentinean\\\">Argentinean</option>\\n      <option value=\\\"armenian\\\">Armenian</option>\\n      <option value=\\\"australian\\\">Australian</option>\\n      <option value=\\\"austrian\\\">Austrian</option>\\n      <option value=\\\"azerbaijani\\\">Azerbaijani</option>\\n      <option value=\\\"bahamian\\\">Bahamian</option>\\n      <option value=\\\"bahraini\\\">Bahraini</option>\\n      <option value=\\\"bangladeshi\\\">Bangladeshi</option>\\n      <option value=\\\"barbadian\\\">Barbadian</option>\\n      <option value=\\\"barbudans\\\">Barbudans</option>\\n      <option value=\\\"batswana\\\">Batswana</option>\\n      <option value=\\\"belarusian\\\">Belarusian</option>\\n      <option value=\\\"belgian\\\">Belgian</option>\\n      <option value=\\\"belizean\\\">Belizean</option>\\n      <option value=\\\"beninese\\\">Beninese</option>\\n      <option value=\\\"bhutanese\\\">Bhutanese</option>\\n      <option value=\\\"bolivian\\\">Bolivian</option>\\n      <option value=\\\"bosnian\\\">Bosnian</option>\\n      <option value=\\\"brazilian\\\">Brazilian</option>\\n      <option value=\\\"british\\\">British</option>\\n      <option value=\\\"bruneian\\\">Bruneian</option>\\n      <option value=\\\"bulgarian\\\">Bulgarian</option>\\n      <option value=\\\"burkinabe\\\">Burkinabe</option>\\n      <option value=\\\"burmese\\\">Burmese</option>\\n      <option value=\\\"burundian\\\">Burundian</option>\\n      <option value=\\\"cambodian\\\">Cambodian</option>\\n      <option value=\\\"cameroonian\\\">Cameroonian</option>\\n      <option value=\\\"canadian\\\">Canadian</option>\\n      <option value=\\\"cape verdean\\\">Cape Verdean</option>\\n      <option value=\\\"central african\\\">Central African</option>\\n      <option value=\\\"chadian\\\">Chadian</option>\\n      <option value=\\\"chilean\\\">Chilean</option>\\n      <option value=\\\"chinese\\\">Chinese</option>\\n      <option value=\\\"colombian\\\">Colombian</option>\\n      <option value=\\\"comoran\\\">Comoran</option>\\n      <option value=\\\"congolese\\\">Congolese</option>\\n      <option value=\\\"costa rican\\\">Costa Rican</option>\\n      <option value=\\\"croatian\\\">Croatian</option>\\n      <option value=\\\"cuban\\\">Cuban</option>\\n      <option value=\\\"cypriot\\\">Cypriot</option>\\n      <option value=\\\"czech\\\">Czech</option>\\n      <option value=\\\"danish\\\">Danish</option>\\n      <option value=\\\"djibouti\\\">Djibouti</option>\\n      <option value=\\\"dominican\\\">Dominican</option>\\n      <option value=\\\"dutch\\\">Dutch</option>\\n      <option value=\\\"east timorese\\\">East Timorese</option>\\n      <option value=\\\"ecuadorean\\\">Ecuadorean</option>\\n      <option value=\\\"egyptian\\\">Egyptian</option>\\n      <option value=\\\"emirian\\\">Emirian</option>\\n      <option value=\\\"equatorial guinean\\\">Equatorial Guinean</option>\\n      <option value=\\\"eritrean\\\">Eritrean</option>\\n      <option value=\\\"estonian\\\">Estonian</option>\\n      <option value=\\\"ethiopian\\\">Ethiopian</option>\\n      <option value=\\\"fijian\\\">Fijian</option>\\n      <option value=\\\"filipino\\\">Filipino</option>\\n      <option value=\\\"finnish\\\">Finnish</option>\\n      <option value=\\\"french\\\">French</option>\\n      <option value=\\\"gabonese\\\">Gabonese</option>\\n      <option value=\\\"gambian\\\">Gambian</option>\\n      <option value=\\\"georgian\\\">Georgian</option>\\n      <option value=\\\"german\\\">German</option>\\n      <option value=\\\"ghanaian\\\">Ghanaian</option>\\n      <option value=\\\"greek\\\">Greek</option>\\n      <option value=\\\"grenadian\\\">Grenadian</option>\\n      <option value=\\\"guatemalan\\\">Guatemalan</option>\\n      <option value=\\\"guinea-bissauan\\\">Guinea-Bissauan</option>\\n      <option value=\\\"guinean\\\">Guinean</option>\\n      <option value=\\\"guyanese\\\">Guyanese</option>\\n      <option value=\\\"haitian\\\">Haitian</option>\\n      <option value=\\\"herzegovinian\\\">Herzegovinian</option>\\n      <option value=\\\"honduran\\\">Honduran</option>\\n      <option value=\\\"hungarian\\\">Hungarian</option>\\n      <option value=\\\"icelander\\\">Icelander</option>\\n      <option value=\\\"indian\\\">Indian</option>\\n      <option value=\\\"indonesian\\\">Indonesian</option>\\n      <option value=\\\"iranian\\\">Iranian</option>\\n      <option value=\\\"iraqi\\\">Iraqi</option>\\n      <option value=\\\"irish\\\">Irish</option>\\n      <option value=\\\"israeli\\\">Israeli</option>\\n      <option value=\\\"italian\\\">Italian</option>\\n      <option value=\\\"ivorian\\\">Ivorian</option>\\n      <option value=\\\"jamaican\\\">Jamaican</option>\\n      <option value=\\\"japanese\\\">Japanese</option>\\n      <option value=\\\"jordanian\\\">Jordanian</option>\\n      <option value=\\\"kazakhstani\\\">Kazakhstani</option>\\n      <option value=\\\"kenyan\\\">Kenyan</option>\\n      <option value=\\\"kittian and nevisian\\\">Kittian and Nevisian</option>\\n      <option value=\\\"kuwaiti\\\">Kuwaiti</option>\\n      <option value=\\\"kyrgyz\\\">Kyrgyz</option>\\n      <option value=\\\"laotian\\\">Laotian</option>\\n      <option value=\\\"latvian\\\">Latvian</option>\\n      <option value=\\\"lebanese\\\">Lebanese</option>\\n      <option value=\\\"liberian\\\">Liberian</option>\\n      <option value=\\\"libyan\\\">Libyan</option>\\n      <option value=\\\"liechtensteiner\\\">Liechtensteiner</option>\\n      <option value=\\\"lithuanian\\\">Lithuanian</option>\\n      <option value=\\\"luxembourger\\\">Luxembourger</option>\\n      <option value=\\\"macedonian\\\">Macedonian</option>\\n      <option value=\\\"malagasy\\\">Malagasy</option>\\n      <option value=\\\"malawian\\\">Malawian</option>\\n      <option value=\\\"malaysian\\\">Malaysian</option>\\n      <option value=\\\"maldivan\\\">Maldivan</option>\\n      <option value=\\\"malian\\\">Malian</option>\\n      <option value=\\\"maltese\\\">Maltese</option>\\n      <option value=\\\"marshallese\\\">Marshallese</option>\\n      <option value=\\\"mauritanian\\\">Mauritanian</option>\\n      <option value=\\\"mauritian\\\">Mauritian</option>\\n      <option value=\\\"mexican\\\">Mexican</option>\\n      <option value=\\\"micronesian\\\">Micronesian</option>\\n      <option value=\\\"moldovan\\\">Moldovan</option>\\n      <option value=\\\"monacan\\\">Monacan</option>\\n      <option value=\\\"mongolian\\\">Mongolian</option>\\n      <option value=\\\"moroccan\\\">Moroccan</option>\\n      <option value=\\\"mosotho\\\">Mosotho</option>\\n      <option value=\\\"motswana\\\">Motswana</option>\\n      <option value=\\\"mozambican\\\">Mozambican</option>\\n      <option value=\\\"namibian\\\">Namibian</option>\\n      <option value=\\\"nauruan\\\">Nauruan</option>\\n      <option value=\\\"nepalese\\\">Nepalese</option>\\n      <option value=\\\"new zealander\\\">New Zealander</option>\\n      <option value=\\\"ni-vanuatu\\\">Ni-Vanuatu</option>\\n      <option value=\\\"nicaraguan\\\">Nicaraguan</option>\\n      <option value=\\\"nigerien\\\">Nigerien</option>\\n      <option value=\\\"north korean\\\">North Korean</option>\\n      <option value=\\\"northern irish\\\">Northern Irish</option>\\n      <option value=\\\"norwegian\\\">Norwegian</option>\\n      <option value=\\\"omani\\\">Omani</option>\\n      <option value=\\\"pakistani\\\">Pakistani</option>\\n      <option value=\\\"palauan\\\">Palauan</option>\\n      <option value=\\\"panamanian\\\">Panamanian</option>\\n      <option value=\\\"papua new guinean\\\">Papua New Guinean</option>\\n      <option value=\\\"paraguayan\\\">Paraguayan</option>\\n      <option value=\\\"peruvian\\\">Peruvian</option>\\n      <option value=\\\"polish\\\" selected>Polish</option>\\n      <option value=\\\"portuguese\\\">Portuguese</option>\\n      <option value=\\\"qatari\\\">Qatari</option>\\n      <option value=\\\"romanian\\\">Romanian</option>\\n      <option value=\\\"russian\\\">Russian</option>\\n      <option value=\\\"rwandan\\\">Rwandan</option>\\n      <option value=\\\"saint lucian\\\">Saint Lucian</option>\\n      <option value=\\\"salvadoran\\\">Salvadoran</option>\\n      <option value=\\\"samoan\\\">Samoan</option>\\n      <option value=\\\"san marinese\\\">San Marinese</option>\\n      <option value=\\\"sao tomean\\\">Sao Tomean</option>\\n      <option value=\\\"saudi\\\">Saudi</option>\\n      <option value=\\\"scottish\\\">Scottish</option>\\n      <option value=\\\"senegalese\\\">Senegalese</option>\\n      <option value=\\\"serbian\\\">Serbian</option>\\n      <option value=\\\"seychellois\\\">Seychellois</option>\\n      <option value=\\\"sierra leonean\\\">Sierra Leonean</option>\\n      <option value=\\\"singaporean\\\">Singaporean</option>\\n      <option value=\\\"slovakian\\\">Slovakian</option>\\n      <option value=\\\"slovenian\\\">Slovenian</option>\\n      <option value=\\\"solomon islander\\\">Solomon Islander</option>\\n      <option value=\\\"somali\\\">Somali</option>\\n      <option value=\\\"south african\\\">South African</option>\\n      <option value=\\\"south korean\\\">South Korean</option>\\n      <option value=\\\"spanish\\\">Spanish</option>\\n      <option value=\\\"sri lankan\\\">Sri Lankan</option>\\n      <option value=\\\"sudanese\\\">Sudanese</option>\\n      <option value=\\\"surinamer\\\">Surinamer</option>\\n      <option value=\\\"swazi\\\">Swazi</option>\\n      <option value=\\\"swedish\\\">Swedish</option>\\n      <option value=\\\"swiss\\\">Swiss</option>\\n      <option value=\\\"syrian\\\">Syrian</option>\\n      <option value=\\\"taiwanese\\\">Taiwanese</option>\\n      <option value=\\\"tajik\\\">Tajik</option>\\n      <option value=\\\"tanzanian\\\">Tanzanian</option>\\n      <option value=\\\"thai\\\">Thai</option>\\n      <option value=\\\"togolese\\\">Togolese</option>\\n      <option value=\\\"tongan\\\">Tongan</option>\\n      <option value=\\\"trinidadian or tobagonian\\\">Trinidadian or Tobagonian</option>\\n      <option value=\\\"tunisian\\\">Tunisian</option>\\n      <option value=\\\"turkish\\\">Turkish</option>\\n      <option value=\\\"tuvaluan\\\">Tuvaluan</option>\\n      <option value=\\\"ugandan\\\">Ugandan</option>\\n      <option value=\\\"ukrainian\\\">Ukrainian</option>\\n      <option value=\\\"uruguayan\\\">Uruguayan</option>\\n      <option value=\\\"uzbekistani\\\">Uzbekistani</option>\\n      <option value=\\\"venezuelan\\\">Venezuelan</option>\\n      <option value=\\\"vietnamese\\\">Vietnamese</option>\\n      <option value=\\\"welsh\\\">Welsh</option>\\n      <option value=\\\"yemenite\\\">Yemenite</option>\\n      <option value=\\\"zambian\\\">Zambian</option>\\n      <option value=\\\"zimbabwean\\\">Zimbabwean</option>\\n    </select>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('country').hasError('required') \\n              && registerForm.get('country').touched\\\">Please choose your nationality</div>\\n  </div>\\n\\n  <div class=\\\"mb-2\\\">\\n    <input type=\\\"number\\\" id=\\\"inputPhoneNumber\\\" class=\\\"form-control mb-2\\\" placeholder=\\\"Phone Number - optional\\\"\\n      formControlName=\\\"phoneNumber\\\">\\n  </div>\\n\\n  <div class=\\\"text-center\\\">\\n    <button [disabled]=\\\"!registerForm.valid\\\" class=\\\"btn btn-success\\\" type=\\\"submit\\\">Sign up</button>\\n    <button class=\\\"btn btn-secondary\\\" routerLink=\\\"\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-regist',\n  templateUrl: './regist.component.html',\n  styleUrls: ['./regist.component.css']\n})\nexport class RegistComponent implements OnInit {\n  user: User;\n  registerForm: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;  // thanks to Partial we automaticly set all props to be optional\n\n  constructor(private authService: AuthService, private alertify: AlertifyService,\n              private fb: FormBuilder, private router: Router) { }\n\n  ngOnInit() {\n    this.bsConfig = {\n      containerClass: 'theme-default',\n      dateInputFormat: 'YYYY-MM-DD',\n      adaptivePosition: true\n    },\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', [Validators.minLength(7),\n                      Validators.required,\n                      Validators.pattern(new RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])/))]],\n      confirmPassword: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      gender: ['male'],\n      dateOfBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      phoneNumber: ['']\n    }, {validators: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null : {mismatch: true};\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value);\n      this.authService.register(this.user).subscribe(() => {\n        this.alertify.success('Registration successful');\n      }, error => {\n        this.alertify.error(error);\n      }, () => {\n        this.authService.login(this.user).subscribe(() => {\n          this.router.navigate(['/games']);\n        });\n      });\n    }\n  }\n\n  checkToken() {\n    return this.authService.loggedIn();\n    // return !!token;  // if token is not empty because of !! it will return true, otherwise it will return false\n  }\n\n  cancel() {\n    console.log('cancelled');\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhbGsvdGFsay5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  talk works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-talk',\n  templateUrl: './talk.component.html',\n  styleUrls: ['./talk.component.css']\n})\nexport class TalkComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlYW1zL3RlYW1zLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  teams works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}